name:        'Clean out deployments'
description: |
             It is a known issue that GitHub deployments are coupled with Actions Environments. We don't use deployments
             at all, and they are just cluttering the UI with deployment status updates. This step indiscriminately cleans
             out all deployments.
             
             Reference: https://github.com/actions/runner/issues/2120

inputs:
  per_page:
    description: 'Number of items to fetch per page. Should not be too high to avoid rate limit exceed.'
    default:     "50"

runs:
  using: "composite"
  steps:
    - name: Find and delete deployments
      uses: actions/github-script@v7
      if:   always()
      with:
        script: |
                const deployments = await github.rest.repos.listDeployments({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    per_page: ${{ inputs.per_page }},
                });
                await Promise.all(
                    deployments.data.map(async (deployment) => {
                        await github.rest.repos.createDeploymentStatus({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            deployment_id: deployment.id,
                            state: 'inactive'
                        });
                        await github.rest.repos.deleteDeployment({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            deployment_id: deployment.id
                        });
                        core.info(`Deleted deployment: ${deployment.id}`);
                    })
                );

    - name: Clean up own completed runs
      # This step cleans out successful runs for this very workflow to avoid cluttering the Actions tab.
      uses: actions/github-script@v7
      if:   always()
      with:
        script: |
                const runs = await github.rest.actions.listWorkflowRuns({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    workflow_id: 'clean.yaml',
                    status: 'completed',
                    per_page: ${{ inputs.per_page }},
                });
                await Promise.all(
                    runs.data.workflow_runs.map(async (run) => {
                        await github.rest.actions.deleteWorkflowRun({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            run_id: run.id
                        });
                        core.info(`Deleted run: ${run.id}`);
                    })
                )
